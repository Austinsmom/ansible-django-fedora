---

- name: Install packages
  yum: name={{ item }}  state=installed
  with_items:
    - postgresql-server
    - postgresql-libs
    - postgresql-plpython
    - postgresql-contrib
    - python-psycopg2

- name: Set postgresql-server to run on boot
  service: name=postgresql enabled=yes
  ignore_errors: true
  notify:
    - restart postgresql
  tags:
    - service

- name: Add our postgres config file.  # rather than doing a `service postgresql initdb`, just copy over the 2 config files
  copy: >
    src={{ private_path }}/files/{{ item }}
    dest=/var/lib/pgsql/data/{{ item }}
    owner=postgres
  with_items:
    - pg_hba.conf
    - postgresql.conf
  notify:
    - restart postgresql
  tags:
    - config

- name: Ensure postgres has a place to backup to
  file: dest=/backups state=directory owner=postgres

- name: Copy over backup scriplet
  copy: src=backup-database dest=/usr/local/bin/backup-database mode=0755

- name: Set up some cronjobs to backup databases as configured
  template: >
    src=cron-backup-database
    dest=/etc/cron.d/cron-backup-database-{{ item }}
  with_items:
  - "{{ dbs_to_backup }}"
  when: dbs_to_backup != []
  tags:
  - cron

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=restarted enabled=yes
  # sudo_user: "{{ postgres_sudo_user }}"
  # sudo: yes
  tags:
    - running

- name: Ensure database {{ db_name }} is created
  # sudo_user: "{{ postgres_sudo_user }}"
  postgresql_db: db={{ db_name }} state=present
  tags:
    - debug


# # sudo usermod -a -G dev,bigdata postgres

# - name: Initialize database
#   command: service postgresql initdb 
#            creates=/var/lib/pgsql/data/postgresql.conf

# - name: Start PostgreSQL and enable at boot
#   service: name=postgresql enabled=yes state=started






# # - name: Ensure database is created
# #   sudo_user: "{{ postgres_sudo_user }}"
# #   postgresql_db: name={{ db_name }}
# #                  encoding='UTF-8'
# #                  lc_collate='en_US.UTF-8'
# #                  lc_ctype='en_US.UTF-8'
# #                  template='template0'
# #                  state=present

# # - name: Ensure user does not have unnecessary privileges
# #   sudo_user: "{{ postgres_sudo_user }}"
# #   postgresql_user: name={{ db_user }}
# #                    role_attr_flags=NOSUPERUSER,NOCREATEDB
# #                    state=present

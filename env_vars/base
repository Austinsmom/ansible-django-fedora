---
git_repo: ssh://git@stash.sharplabs.com:7999/sasbd/ssg.git

project_name: bigdata
application_name: bigdata

# Application bigdata
django_settings_file: settings

run_django_syncdb: yes
run_django_south_migration: no
run_django_collectstatic: yes
# run_bower_install: yes

# SMTP settings.
smtp_host: smtp.gmail.com
smtp_user: example.user.name@gmail.com


# dbs_to_backup: []
dbs_to_backup:
  - djangodb

# service ports that don't need to be private:
port_http_debug: 8000
port_http: 80


################# PRIVATE #################
#
# Placeholders below for secrets that should be encrypted or stored outside repo,
# or in a folder encrypted by git-crypt. 
# The .gitattributes files should do this for you for the private/vars.yml file.
# But double/tripple check that they really are encrypted, throughout all versions of your
# repo branch before pushing that branch anywhere public

# django project settings.DATABASES
databases:
  - { NAME: 'postgres_database_name_for_django',
      USER: 'user_name_within_postgres',
      PASSWORD: 'postgres_database_password_for_django'
    }

# credentials stored in environment variables in a virtualenv for cloud services like heroku
db_password: plain_text_password
db_name: database_name_within_postgres_server
ssl_key_password: plain_text_password
smtp_host: your.mail.service.com
smtp_user: your_user_name@mail.service.com
smtp_password: your_email_account_password

# django settings.py template values
django_secret_key: '1234567891230913098987qwertyuipasdfasdfasd^-*$=()!'

# Username to switch to on the remote server. Ansible default is `root`
sudo_user: root
# Username on the remote server that you are sshing as, e.g. `ssh remote_user@remote_server.com`
remote_user: root

# ports that should remain secret
port_ssh: 22
port_https: 443
port_postgres: 5432

#
############ END PRIVATE #################



